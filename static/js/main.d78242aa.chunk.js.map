{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","settext","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d78242aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"/about\">About</a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes = { title: PropTypes.string }\r\nNavbar.defaultProps = {\r\n  title: 'Set title here'\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Upper case was clicked\"+text);\r\n        let newText  = text.toUpperCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n       \r\n        let newText  = text.toLowerCase();\r\n        settext(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n       \r\n        let newText  = '';\r\n        settext(newText);\r\n        props.showAlert(\"Cleared\", \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        settext(event.target.value);\r\n    }\r\n\r\n    const handleCopy =()=>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n\r\n    }\r\n    const [text, settext] = useState('');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode === 'dark'?'grey':'white', color: props.mode === 'dark'?'white':'#042743'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick} >UpperCase</button> \r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLowClick} >LowerCase</button> \r\n            <button className=\"btn btn-primary \" onClick={handleClearClick} >Clear</button> \r\n            <button className=\"btn btn-primary mx-3\" onClick={handleCopy} >Copy</button> \r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n            <p>{0.008 * (text.split(\" \").length-1)} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    } \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type \n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"<Text_Utils>\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/> \n    <div className=\"container my-3\">\n      {/* <Switch>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/\">\n        </Route>\n      </Switch> */}\n      <Textform heading=\"Enter text to analyze below\" showAlert={showAlert} mode={mode}/>\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}